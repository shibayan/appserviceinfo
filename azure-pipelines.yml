trigger:
- master

variables:
  BuildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_XMLDOC_MODE: skip

stages:
- stage: Build
  jobs:
  - job: Test_Build
    condition: not(eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.0.100-preview9-014004'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build $(BuildConfiguration)'

  - job: Publish_Build
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.0.100-preview9-014004'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        arguments: '-c $(BuildConfiguration) -r win-x64 --self-contained false -p:PublishReadyToRun=true --output $(System.DefaultWorkingDirectory)/publish'
        zipAfterPublish: true

    - publish: publish
      artifact: webapp
      displayName: 'Publish artifacts'

- stage: Deploy
  dependsOn:
  - Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Deploy_AppService
    pool:
      vmImage: 'windows-2019'
    steps:
    - checkout: none

    - download: current
      artifact: webapp
      displayName: 'Download artifact'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Visual Studio Enterprise'
        appType: 'webApp'
        appName: 'appserviceinfo'
        package: '$(Pipeline.Workspace)/**/*.zip'
        deploymentMethod: 'runFromPackage'
      displayName: 'Deploy to Web App'